<neuroml xmlns="http://www.neuroml.org/schema/neuroml2"  xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.neuroml.org/schema/neuroml2 https://raw.github.com/NeuroML/NeuroML2/development/Schemas/NeuroML2/NeuroML_v2beta5.xsd" id="Rates">
    
 <silentSynapse id="silent1"/>
    <rateSynapse id="rs" />
    
    <simpleRateUnit id="Ecomp"  tau="10ms" r0="0Hz"/>
    <simpleRateUnit id="Icomp"  tau="5ms" r0="5Hz"/>
    
    <pulseGenerator id="baselineE" delay="50ms" duration="50ms" amplitude="8nA" />

    
    
    <ComponentType name="baseRateUnit"
        extends="baseCellMembPot"
        description="Base type of any cell/population which has a (dimensional) rate _r.">

        <Exposure name="r" dimension="per_time"/>

    </ComponentType>
    
    <ComponentType name="baseRateUnitDL"
        extends="baseCellMembPotDL"
        description="Base type of any cell/population which has a (dimensionless) rate _r.">

        <Exposure name="R" dimension="none"/>
        

    </ComponentType>
    
    
    <ComponentType  name="simpleRateUnit"
                    extends="baseRateUnit"
                    description="...">

        <Parameter name="r0" dimension="per_time"/>
        <Parameter name="tau" dimension="time"/>

        <Attachments name="synapses" type="basePointCurrent"/>
        
        <Exposure name="iSyn" dimension="current"/>
        <Exposure name="phi" dimension="current"/>
        
        <Constant name="NAMP_SCALE" dimension="current" value="1 nA"/>
        <Constant name="HZ_SCALE" dimension="per_time" value="1 Hz"/>
        <Constant name="MVOLT_SCALE" dimension="voltage" value="1mV"/>
        

        <Dynamics>

            <!--<StateVariable name="v" dimension="voltage" exposure="v"/>
            
            <StateVariable name="v" dimension="voltage" exposure="v"/>-->
            
            <StateVariable name="r" dimension="per_time" exposure="r"/>
            
            <DerivedVariable name="iSyn" dimension="current" exposure="iSyn" select="synapses[*]/i" reduce="add" />
            <DerivedVariable name="v" dimension="voltage" exposure="v" value="r * MVOLT_SCALE / HZ_SCALE" />
           
            
            <ConditionalDerivedVariable name="phi" dimension="none" exposure="phi">
            	<Case condition="iSyn .eq. 0*NAMP_SCALE" value="1"/>
            	<Case condition="iSyn .neq. 0*NAMP_SCALE" value="iSyn / ( (1 - exp(-1*iSyn/NAMP_SCALE)) * NAMP_SCALE)"/>
            </ConditionalDerivedVariable> 

            <TimeDerivative variable="r" value="(-1*r + phi*HZ_SCALE)/tau"/>
            
            <OnStart>
                <StateAssignment variable="r" value="r0"/>
            </OnStart>
            <!--
            -->
            <OnCondition test="r .gt. 100*r0">
                <EventOut port="spike"/>
            </OnCondition>

        </Dynamics>

    </ComponentType>
    
    
    <ComponentType  name="simpleRateUnitDL"
                    extends="baseRateUnitDL"
                    description="...">

        
        <Parameter name="R0" dimension="none"/>
        
        <Parameter name="tau" dimension="time"/>

        <Attachments name="synapses" type="basePointCurrentDL"/>
        
        <Exposure name="ISyn" dimension="none"/>
        
        <Exposure name="phi" dimension="none"/>
        

        <Dynamics>

            <!--<StateVariable name="v" dimension="voltage" exposure="v"/>-->
            
            <StateVariable name="V" dimension="none" exposure="V"/>
            
            <StateVariable name="R" dimension="none" exposure="R"/>
            
            <DerivedVariable name="ISyn" dimension="none" exposure="ISyn" select="synapses[*]/I" reduce="add" />
           
            
            <ConditionalDerivedVariable name="phi" dimension="none" exposure="phi">
            	<Case condition="ISyn .eq. 0" value="1"/>
            	<Case condition="ISyn .neq. 0" value="ISyn / (1 - exp(-1*ISyn))"/>
            </ConditionalDerivedVariable> 

            <TimeDerivative variable="R" value="(-1*R + phi)/tau"/>
            
            <OnStart>
                <StateAssignment variable="R" value="R0"/>
            </OnStart>
            <!--
            -->
            <OnCondition test="R .gt. R0">
                <EventOut port="spike"/>
            </OnCondition>

        </Dynamics>

    </ComponentType>
    
    

    <ComponentType name="silentSynapseDL"
                   extends="baseGradedSynapse"
                   description="Dummy synapse which emits no current. Used as presynaptic endpoint for analog synaptic connection.">
        
        <Property name="weight" dimension="none" defaultValue="1"/> <!-- Not used...-->
    
        <Exposure name="I" dimension="none"/>
        
        <Requirement name="V" dimension="none"/>

        <InstanceRequirement name="peer" type="baseGradedSynapse"/>

        <Dynamics>
            <DerivedVariable name="rpeer" dimension="none" select="peer/R"/>
            <DerivedVariable name="I" exposure="I"  value="0"/>
        </Dynamics>
        
    </ComponentType>
    
    <ComponentType name="rateSynapseDL"
                   extends="baseGradedSynapse"
                   description="...">
        
        <Property name="weight" dimension="none" defaultValue="1"/> 
        
        <Constant name="SEC" dimension="time" value="1s"/>
        
        <Exposure name="I" dimension="none"/>
        
        <Requirement name="R" dimension="none"/>

        <InstanceRequirement name="peer" type="rateSynapseDL"/>

        <Dynamics>
            <DerivedVariable name="rpeer" dimension="none" select="peer/R"/>
            <DerivedVariable name="I" exposure="I"  value="weight * SEC * rpeer"/>
        </Dynamics>
    </ComponentType>
    

    <ComponentType name="rateSynapse"
                   extends="baseGradedSynapse"
                   description="...">
        
        <Property name="weight" dimension="none" defaultValue="1"/> 
        
        <Constant name="SEC" dimension="time" value="1s"/>
        <Constant name="NAMP_SCALE" dimension="current" value="1nA"/>
        
        <Exposure name="i" dimension="current"/>
        
        <Requirement name="r" dimension="per_time"/>

        <InstanceRequirement name="peer" type="rateSynapse"/>

        <Dynamics>
            <DerivedVariable name="rpeer" dimension="per_time" select="peer/r"/>
            <DerivedVariable name="i" exposure="i"  value="weight * SEC * NAMP_SCALE * rpeer"/>
        </Dynamics>
    </ComponentType>
    
    <notes>Generated network</notes>
    <silentSynapse id="silentSyn_proj_Exc_Inh"/>
    <pulseGenerator id="iclamp0" delay="50.0ms" duration="100.0ms" amplitude="2.0nA"/>
    <network id="Rates">
        <notes>Testing...</notes>
        <population id="Exc" component="Ecomp" size="1" type="populationList">
            <property tag="color" value="0.0313725490196 0.188235294118 0.419607843137"/>
            <property tag="region" value="network"/>
            <instance id="0">
                <location x="96.645353569213881" y="44.073259917535268" z="0.074914700585872"/>
            </instance>
        </population>
        <population id="Inh" component="Icomp" size="1" type="populationList">
            <property tag="color" value="0.894117647059 0.101960784314 0.109803921569"/>
            <property tag="region" value="network"/>
            <instance id="0">
                <location x="91.09759624491241" y="93.926899736376399" z="5.822275730589491"/>
            </instance>
        </population>
        <projection id="proj_Exc_Inh" presynapticPopulation="Exc" postsynapticPopulation="Inh" synapse="rs"/>
        <continuousProjection id="proj_Exc_Inh" presynapticPopulation="Exc" postsynapticPopulation="Inh">
            <continuousConnectionInstanceW id="0" preCell="../Exc/0/Ecomp" postCell="../Inh/0/Icomp" preComponent="silentSyn_proj_Exc_Inh" postComponent="rs" weight="2.9706"/>
        </continuousProjection>
        <inputList id="modulation" population="Exc" component="iclamp0">
            <input id="0" target="../Exc/0/Ecomp" destination="synapses"/>
        </inputList>
    </network>
</neuroml>
